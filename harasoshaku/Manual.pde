/*こんな時は
  
  ・パクって音がしない
     →口に入れてるのにログのisEatingがfalseになっている場合は口の照度センサーが反応してない可能性有り
     →isEatingがtrueになっている時は音が出てる(口に物が入ってるのは認識している)はずなので、PCの音量とか、アンプの電源とか、PureDataを確認
     
  ・パクパクたくさん音がする
     →唐揚げの時になりがち、口の中で暴れてて、照度センサーの値がブレブレになってるんだと思う
  
  ・後ろに反ってるのにゴクって音がしない
     →isEatingがtrueになってないとならないです(食べ物入れ直したら、一度咀嚼しないと飲み込めません)
     →のけ反り足りないのかも(後ろにそってるかどうかのしきい値はSENSOR_VALUE_BACKです)
   
  ・パクって音はしたものの、前にかがんでも音がしない
     →モーターも動いてないなら、電源が悪さしてるか、加速度センサーがおかしいorしきいち値が狂ったか、
     お皿の照度センサーが動いてない可能性あり(お皿の照度センサーがおかしい時はUSB挿し直すとなおったりする)
     →モータは動いているならPureDataとかアンプの電源の問題
      
  ・しきい値について
  harasoshakuファイルの上の方で定義してある
  final int SENSOR_VALUE_NORMAL = 590; //加速度センサーzの通常時の値
  final int SENSOR_VALUE_BACK = 525; //加速度センサーzの後ろに沿った時の値
  final int SENSOR_VALUE_FORWARD = 650; //加速度センサーzの前にそり始めた時の値(この時が、振動、モーター共に一番弱い)
  final int SENSOR_VALUE_FORWARD_MAX = 690; //加速度センサーzの前にそりきった時の値(この時に振動、モーター共に一番強くなる)
  final int SENSOR_VALUE_ISEATING = 915; //口の中の照度センサーの値、これを超えたら食べたことになる。ログのEatValの値が照度センサーの値です、これ見ながら調節
  final int SENSOR_VALUE_SENBEI = 980; //せんべいのお皿の閾値、これがおかしくなることは多分ない
  final int SENSOR_VALUE_NIKU = 1000; //にくのお皿の閾値、上に同じ
  
  ・ログの値について
  x,y,z = 加速度センサーの各値、現状x,yは使ってない
  EatVal = 口の中の照度センサーの値
  isEating = 口の中に食べ物が入ってるかどうか,飲み込むと強制的にfalseになる。
  Tabemono = 0が両方お皿に乗ってる状態　1がせんべいがない状態(つまりせんべいを手に取ってる)　2が肉がない状態
  isSwallow = 飲み込んだかどうか
  volume = 音量、傾きに応じて変動する、maxは1
  power = モーターの強さ、傾きに応じて変動する、maxは255
  volumeとpowerは咀嚼してる時しか変動しないです
  
  ・ふつーに立った状態でc押すとキャリブレーションされます
  ・r押すと初期値に戻ります
  　

  
*/